/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.iud.ea1.presentation;

import com.iud.ea1.controller.FuncionarioController;
import com.iud.ea1.controller.GrupoFamiliarController;
import com.iud.ea1.domain.Funcionario;
import com.iud.ea1.util.Constants;
import com.iud.ea1.util.ModelarTabla;
import com.iud.ea1.util.UtilityMethods;
import com.iud.ea1.domain.GrupoFamiliar;

import javax.swing.*;
import javax.swing.table.DefaultTableModel;
import java.util.List;

/**
 *
 * @author alejo
 */
public class Principal extends javax.swing.JFrame {

    private FuncionarioController funcionarioController;
    private GrupoFamiliarController grupoFamiliarController;
    private Funcionario funcionario;
    private GrupoFamiliar grupoFamiliar;
    private ModelarTabla modelarTablaFuncionarios;
    private DefaultTableModel modelFuncionarios;
    private boolean isEdit = false;

    /**
     * Creates new form Principal
     */
    public Principal() {
        this.grupoFamiliar = grupoFamiliar;
        initComponents();
        this.chargeConstans();
        this.funcionarioController = new FuncionarioController();
        this.grupoFamiliarController = new GrupoFamiliarController();
        this.modelarTablaFuncionarios = new ModelarTabla(this.jTableFuncionarios);

        this.loadFuncionarios();
    }

    public void chargeConstans() {
        Constants.civilStatus.forEach(c -> jComboBoxCivilState.addItem(c));
        Constants.genders.forEach(c -> jComboBoxGender.addItem(c));
        Constants.rolesFuncionario.forEach(r -> jComboBoxRol.addItem(r));
    }

    public void loadFuncionarios(){
        this.modelFuncionarios =this.modelarTablaFuncionarios.getModel();
        this.modelFuncionarios.setRowCount(0);
        List<Funcionario> funcionarios = this.funcionarioController.getFuncionarios();
        funcionarios.forEach(f -> {
            this.modelFuncionarios.addRow(new Object[]{
                f.getFuncionarioId(),
                f.getNombre(),
                f.getApellido(),
                f.getSexo(),
                f.getEstadoCivil(),
                f.getDireccion(),
                f.getTelefono(),
                f.getFechaNacimiento()
            });
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableFuncionarios = new javax.swing.JTable();
        jTextFieldSearch = new javax.swing.JTextField();
        jButtonEdit = new javax.swing.JButton();
        jButtonDelete = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jComboBoxGender = new javax.swing.JComboBox<>();
        jComboBoxCivilState = new javax.swing.JComboBox<>();
        jTextFieldLastName = new javax.swing.JTextField();
        jTextFieldName = new javax.swing.JTextField();
        jTextFieldAddres = new javax.swing.JTextField();
        jTextFieldPhone = new javax.swing.JTextField();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel12 = new javax.swing.JLabel();
        jTextFieldCc = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jComboBoxRol = new javax.swing.JComboBox<>();
        jButtonSave = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel9.setText("Busqueda");

        jTableFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Cedula", "Nombre", "Apellido", "Genero", "Estado Civil", "Direccion", "Telefono", "Fecha Nacimiento"
            }
        ));
        jTableFuncionarios.setMaximumSize(new java.awt.Dimension(500, 80));
        jScrollPane1.setViewportView(jTableFuncionarios);

        jTextFieldSearch.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldSearchKeyPressed(evt);
            }
        });

        jButtonEdit.setText("Editar");
        jButtonEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonEditActionPerformed(evt);
            }
        });

        jButtonDelete.setText("Eliminar");
        jButtonDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 850, Short.MAX_VALUE)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(46, 46, 46)
                .addComponent(jLabel9)
                .addGap(34, 34, 34)
                .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonEdit)
                .addGap(18, 18, 18)
                .addComponent(jButtonDelete)
                .addGap(1, 1, 1))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextFieldSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel9)
                    .addComponent(jButtonEdit)
                    .addComponent(jButtonDelete))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 337, Short.MAX_VALUE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Funcionarios", jPanel2);

        jLabel2.setText("Nombre");

        jLabel3.setText("Apellido");

        jLabel4.setText("Estado Civil");

        jLabel5.setText("Sexo");

        jLabel6.setText("Direccion");

        jLabel7.setText("Telefono");

        jLabel8.setText("Fecha Nacimiento");

        jComboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        jComboBoxCivilState.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        jLabel12.setText("Cedula");

        jLabel13.setText("Rol Grupo Familiar");

        jComboBoxRol.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccionar" }));

        jButtonSave.setText("Guardar");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(248, 248, 248)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel3)
                    .addComponent(jLabel12)
                    .addComponent(jLabel13)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldAddres, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.Alignment.LEADING, 0, 234, Short.MAX_VALUE)
                    .addComponent(jComboBoxCivilState, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTextFieldCc, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jComboBoxRol, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(252, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonSave)
                .addGap(356, 356, 356))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(jTextFieldCc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextFieldName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jTextFieldLastName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jComboBoxCivilState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5)
                    .addComponent(jComboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(jTextFieldAddres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextFieldPhone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addComponent(jDateChooser2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel13)
                    .addComponent(jComboBoxRol, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addComponent(jButtonSave)
                .addContainerGap(31, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Crear Funcionaro", jPanel1);

        jLabel1.setText("Gestion de Funcionarios");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTabbedPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(jLabel1)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel1)
                .addGap(46, 46, 46)
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 446, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        if (!this.validateFields()) {
            JOptionPane.showMessageDialog(this,
                    "Todos los campos son obligatorios, "
                    + "no pueden estar vacios o en Seleccionar");
            return;
        }
        this.funcionario = new Funcionario();
        this.grupoFamiliar = new GrupoFamiliar();
        this.funcionario.setFuncionarioId(this.jTextFieldCc.getText());
        this.funcionario.setNombre(this.jTextFieldName.getText());
        this.funcionario.setApellido(this.jTextFieldLastName.getText());
        this.funcionario.setDireccion(this.jTextFieldAddres.getText());
        this.funcionario.setTelefono(this.jTextFieldPhone.getText());
        this.funcionario.setFechaNacimiento(
                UtilityMethods.dateToLocaleDate(
                        this.jDateChooser2.getDate()));
        this.funcionario.setEstadoCivil(
                this.jComboBoxCivilState.getSelectedItem().toString());
        this.funcionario.setSexo(
                this.jComboBoxGender.getSelectedItem().toString());
        this.grupoFamiliar.setRol(
                this.jComboBoxRol.getSelectedItem().toString());
        try {
            this.funcionario.setGrupofamiliarId(
                    this.grupoFamiliarController.createGrupoFamiliar(this.grupoFamiliar));
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
        if(!this.isEdit){
        try{
            this.funcionarioController.crearFuncionario(this.funcionario);
        }catch(Exception e){
            e.printStackTrace();
            this.grupoFamiliarController.deleteGrupoFamiliar(this.grupoFamiliar.getId());
            return;
        }}else {
            try {
                this.funcionarioController.editarFuncionarioPorId(
                        (this.funcionario.getFuncionarioId()),
                        this.funcionario);
            } catch (Exception e) {
                e.printStackTrace();
                return;
            }
            this.isEdit = false;
        }
        
        JOptionPane.showMessageDialog(this,
                "Funcionario guardado con exito");
        this.cleanFields();

        this.loadFuncionarios();
        this.jTabbedPane1.setSelectedIndex(0);
    }//GEN-LAST:event_jButtonSaveActionPerformed

    private void jTextFieldSearchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldSearchKeyPressed
        this.modelarTablaFuncionarios.filter(this.jTextFieldSearch.getText(),null);
    }//GEN-LAST:event_jTextFieldSearchKeyPressed

    private void jButtonEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonEditActionPerformed
        int row = this.jTableFuncionarios.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un funcionario");
            return;
        }
        String cc = this.jTableFuncionarios.getValueAt(row, 0).toString();
        this.funcionario = this.funcionarioController.obtenerFuncionarioPorId(cc);
        this.jTextFieldCc.setText(this.funcionario.getFuncionarioId());
        this.jTextFieldName.setText(this.funcionario.getNombre());
        this.jTextFieldLastName.setText(this.funcionario.getApellido());
        this.jTextFieldAddres.setText(this.funcionario.getDireccion());
        this.jTextFieldPhone.setText(this.funcionario.getTelefono());
        this.jDateChooser2.setDate(UtilityMethods.localDateToDate(
                this.funcionario.getFechaNacimiento()));
        this.jComboBoxCivilState.setSelectedItem(this.funcionario.getEstadoCivil());
        this.jComboBoxGender.setSelectedItem(this.funcionario.getSexo());
        this.jComboBoxRol.setSelectedItem(this.funcionario.getGrupofamiliarId().getRol());
        this.jTabbedPane1.setSelectedIndex(1);
        this.isEdit = true;
    }//GEN-LAST:event_jButtonEditActionPerformed

    private void jButtonDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonDeleteActionPerformed
        int row = this.jTableFuncionarios.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this,
                    "Debe seleccionar un funcionario");
            return;
        }
        String cc = this.jTableFuncionarios.getValueAt(row, 0).toString();
        this.funcionario = this.funcionarioController.obtenerFuncionarioPorId(cc);
        try {
            this.funcionarioController.eliminarFuncionarioPorId(this.funcionario.getFuncionarioId());
            this.grupoFamiliarController.deleteGrupoFamiliar(this.funcionario.getGrupofamiliarId().getId());
        } catch (Exception e) {
            e.printStackTrace();
            return;
        }
        JOptionPane.showMessageDialog(this,
                "Funcionario eliminado con exito");
        this.loadFuncionarios();
    }//GEN-LAST:event_jButtonDeleteActionPerformed

    public void cleanFields() {
        this.jTextFieldCc.setText("");
        this.jTextFieldName.setText("");
        this.jTextFieldLastName.setText("");
        this.jTextFieldAddres.setText("");
        this.jTextFieldPhone.setText("");
        this.jDateChooser2.setDate(null);
        this.jComboBoxCivilState.setSelectedIndex(0);
        this.jComboBoxGender.setSelectedIndex(0);
        this.jComboBoxRol.setSelectedIndex(0);
    }

    public Boolean validateFields() {
        if (this.jTextFieldCc.getText().isEmpty()
                || this.jTextFieldName.getText().isEmpty()
                || this.jTextFieldLastName.getText().isEmpty()
                || this.jTextFieldAddres.getText().isEmpty()
                || this.jTextFieldPhone.getText().isEmpty()
                || this.jDateChooser2.getDate() == null
                || this.jComboBoxCivilState.getSelectedIndex() == 0
                || this.jComboBoxGender.getSelectedIndex() == 0
                || this.jComboBoxRol.getSelectedIndex() == 0) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonDelete;
    private javax.swing.JButton jButtonEdit;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JComboBox<String> jComboBoxCivilState;
    private javax.swing.JComboBox<String> jComboBoxGender;
    private javax.swing.JComboBox<String> jComboBoxRol;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable jTableFuncionarios;
    private javax.swing.JTextField jTextFieldAddres;
    private javax.swing.JTextField jTextFieldCc;
    private javax.swing.JTextField jTextFieldLastName;
    private javax.swing.JTextField jTextFieldName;
    private javax.swing.JTextField jTextFieldPhone;
    private javax.swing.JTextField jTextFieldSearch;
    // End of variables declaration//GEN-END:variables
}
